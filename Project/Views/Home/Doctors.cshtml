@model IEnumerable<Project.Models.Entities.Doctor>
@{
    ViewData["Title"] = "Doctors";
}

<h1>Doctors</h1>
<button type="button" class="btn btn-primary" onclick="showAddDoctorModal()">Add doctor</button>

<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Specialization
            </th>
            <th>
                Contact Number
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Specialization)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactNumber)
                </td>
                <td>
                    <button class="btn btn-success" onclick="showEditDoctorModal(@item.DoctorId, '@item.Name', '@item.Specialization', '@item.ContactNumber')"><i class="bi bi-pencil"></i></button>
                    <button class="btn btn-danger" onclick="showDeleteDoctorModal(@item.DoctorId, '@item.Name')"><i class="bi bi-x"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function showAddDoctorModal() {
        Swal.fire({
            title: 'Add Doctor',
            html: `
                <form id="addDoctorForm">
                    <div class="form-group">
                        <label for="swal-input1">Name</label>
                        <input type="text" id="swal-input1" class="swal2-input" placeholder="Dr. John Smith">
                    </div>
                    <div class="form-group">
                        <label for="swal-input2">Specialization</label>
                        <input type="text" id="swal-input2" class="swal2-input" placeholder="Cardiology">
                    </div>
                    <div class="form-group">
                        <label for="swal-input3">Contact Number</label>
                        <input type="tel" id="swal-input3" class="swal2-input" placeholder="(123) 456-7890">
                    </div>
                </form>
            `,
            focusConfirm: false,
            preConfirm: () => {
                return {
                    name: document.getElementById('swal-input1').value,
                    specialization: document.getElementById('swal-input2').value,
                    contactNumber: document.getElementById('swal-input3').value
                }
            }
        }).then(result => {
            if (result.isConfirmed) {
                var doctorData = result.value;

                $.ajax({
                    url: "https://localhost:7219/adddoctor",
                    type: "POST",
                    data: JSON.stringify(doctorData),
                    contentType: "application/json",
                    success: function (response) {
                        Swal.fire('Saved!', 'Doctor has been added, the page will be reloaded in 3 seconds!', 'success');
                        setTimeout(function () {
                            location.reload()
                        }, 3000);

                    },
                    error: function (error) {
                        Swal.fire('Error!', 'There was an error adding the doctor.', 'error');
                    }
                });
            }
        });
    }

    function showEditDoctorModal(doctorId, name, specialization, contactNumber) {
        Swal.fire({
            title: 'Edit Doctor Details',
            html: `
                <input type="text" id="editName" class="swal2-input" placeholder="Name" value="${name}">
                <input type="text" id="editSpecialization" class="swal2-input" placeholder="Specialization" value="${specialization}">
                <input type="text" id="editContactNumber" class="swal2-input" placeholder="Contact Number" value="${contactNumber}">
            `,
            showCancelButton: true,
            confirmButtonText: 'Update',
            cancelButtonText: 'Cancel',
            preConfirm: () => {
                return {
                    doctorId: doctorId,
                    name: document.getElementById('editName').value,
                    specialization: document.getElementById('editSpecialization').value,
                    contactNumber: document.getElementById('editContactNumber').value
                };
            }
        }).then((result) => {
            if (result.isConfirmed) {
                var doctorData = result.value;

                $.ajax({
                    url: "https://localhost:7219/editdoctor",
                    type: "PUT",
                    data: JSON.stringify(doctorData),
                    contentType: "application/json",
                    success: function (response) {
                        Swal.fire('Saved!', 'The doctor details have been edited, the page will be reloaded in 3 seconds!', 'success');
                        setTimeout(function () {
                            location.reload()
                        }, 3000);

                    },
                    error: function (error) {
                        Swal.fire('Error!', 'There was an error editing the doctor details.', 'error');
                    }
                });
            }
        });
    }

    function showDeleteDoctorModal(doctorId, name) {
        Swal.fire({
            title: 'Confirm Deletion',
            text: `Are you sure you want to delete the doctor ${name}?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Delete',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "https://localhost:7219/deletedoctor" + "/" + doctorId,
                    type: "DELETE",
                    contentType: "application/json",
                    success: function (response) {
                        Swal.fire('Deleted!', 'The doctor has been deleted, the page will be reloaded in 3 seconds!', 'success');
                        setTimeout(function () {
                            location.reload()
                        }, 3000);

                    },
                    error: function (error) {
                        Swal.fire('Error!', 'There was an error deleting the doctor.', 'error');
                    }
                });
            }
        });
    }
</script>